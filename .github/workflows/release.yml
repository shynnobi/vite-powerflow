name: Changeset Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    environment: npm-publish # ← Uses the secure environment
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Build packages
        run: pnpm build

      - name: Test NPM Token
        run: |
          echo "Testing NPM authentication..."
          if [ -z "$NPM_TOKEN" ]; then
            echo "❌ NPM_TOKEN is empty or not set"
            exit 1
          else
            echo "✅ NPM_TOKEN is set (length: ${#NPM_TOKEN})"
          fi

          echo "Testing npm whoami..."
          if npm whoami; then
            echo "✅ Successfully authenticated with npm"
            echo "User: $(npm whoami)"
          else
            echo "❌ Failed to authenticate with npm"
            exit 1
          fi

          echo "Testing access to @vite-powerflow scope..."
          if npm access ls-packages @vite-powerflow 2>/dev/null; then
            echo "✅ Has access to @vite-powerflow organization"
          else
            echo "⚠️  No packages found or no access to @vite-powerflow organization"
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get Release Constants
        id: constants
        run: |
          echo "Reading release constants..."
          CONSTANTS=$(npx tsx constants/release-constants.ts --export-json)
          echo "constants=$CONSTANTS" >> $GITHUB_OUTPUT
          echo "COMMIT_MESSAGE=$(echo "$CONSTANTS" | jq -r '.COMMIT_MESSAGE')" >> $GITHUB_OUTPUT
          echo "PR_TITLE=$(echo "$CONSTANTS" | jq -r '.PR_TITLE')" >> $GITHUB_OUTPUT

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This command will be executed by the action ONLY
          # after the "Version Packages" PR has been merged.
          publish: pnpm run release:publish && pnpm run release:update-baselines
          # This command will be run to create the PR.
          version: pnpm run release:prepare
          # IMPORTANT: The following values are read from scripts/release-constants.ts
          # To ensure correct sync status detection across the project, keep these values in sync
          # vite-powerflow-sync/src/core/syncReporter.ts
          # vite-powerflow-sync/src/core/syncChecker.ts
          commit: ${{ steps.constants.outputs.COMMIT_MESSAGE }}
          title: ${{ steps.constants.outputs.PR_TITLE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # ← Uses the secret from npm-publish environment
          CI: true
